/*
		CLASE 02 INDICES
        
        
        cONCEPTO DE INDICES
			-- FACILITAN LA BUSQUEDA DE DATOS DENTRO DE LA TABLA(DICCIONARIO)
            -- SIN ESTRUCTURA DE INDICES => RECORRER TODA LA TABLA HASTA ECNCONTRAR EL REGISTRO O REGRISTROS
            
            -- INDICES  MYISAM HACE TABLA DE REFERENCIA ADICIONAL AUXILIAR 
				-- CONSIDERACIONES DE INDICES SOBRE MyISAM
					- MODIFICACION EN LA TABLA ORIGINAL => TPDPS LOS INDICES SE ACTUALIZAN
                    - MUCHOS INDICES => MAS TIEMPO DE EJECUCION
                    
		 --- INDICES EN TALBAS INNODBD, CAMPO DE LLAVE PRIMARIA, EN LA MISMA TABLA SERA EL INDICE LA LLAVE PRIMARIA
				-- CONSIDERACIONES SOBRE INNODB
					- LA TABLA VIENE ORDENADA AUTOMATICAMENTE CON LA CLAVE PRIMARIA
                    - MEJOR DESEMPEÑO EN LAS CONSULTAS BUSCANDO A TRAVES DE CLAVE PRIMARIA
					- COSTO PARA HHALAR REGISTRO DE CMAPO QE NO ES PK EN INNODB == MYISAM
                    
                    
	ALGORITMO B-TREE
		MYISAM
			-- CREA UNA ESTRUCTURA SEPARADA PARA INDICES PL Y NO PK
            -- LA COLUMNA DEL INDICE ES ORDENADA Y TOMA COMO REFERENCIA LA POSICION DE LA FILA DE LA TABLA ORIGINAL
            -- IMPLEMENTA INDCES HASH Y B-REE
		
        INNODB
			-- LA TABLA ORIGINAL YA ES ORDENADA CON LA PK
            -- LOS INDICES QUE NO SON PK POSSEEN ESTRUCTURAS SEPARADAS Y TOMAN COMO REFERENCIA EL VALOR DE LA PK
            -- SOLO TRABAJA CON B-TRE
            
	HASH Y B-TREE SON ALGORITMOS DE BUSQUEDA EN LISTAS ORDENADAS.
    
    
   *** B-TREE
    
		ARBOL BINARIO
			-- VALORES A LA IZUERDA DEL NODO SON MENORES
            -- VALORES A LA DERECHA DEL NODO SON MAYORES
            
	CONSIDEREACIONES SOBRE B-TREE
		- BALANCED-BINARY TREE (NODOS DISTRIBUIDOS DE FORMA BALANCEADA)
        - +4BILLONES DE REGISTROS EN 32 NIVELES
        
        
        
*** HASH 
	-- MAPEA DATOS GRANDES DE TAMAÑOS VARIABLES EN UN TAMAÑO FIHO
	-- EJEMPLO
		KJDSFJHGFDKFGÑDKFJGFDLJIOTR.....................................1515151515132
        SASFSDF..........................................................158545516515
        SDOGJIKSM4DF4G1DGD0BFSGFDHGFHGFDJGHJGHJ...........................54458745000
	
    - CUANDO ABRIMOS UN LIBRO, BUSCAMOS EN EL INDICE PARA ENCONTRAR LA PAGINA QUE DESEAMOS CONSULTAR.
    -- CRIPTOGRAFIA, ALAMCENAR CONTRASEÑAS, ENTRE OTROS
    
    BUCKETS: ESPACIOS EN MEMORIA, PENSADO COMO CONJUNTOS COMO CAPITULS  DE LIBRO;
*/

mysql -utoot -p

SELECT *FROM FACTURAS WHERE FECHA_VENTA = "20170101"

EXPLAIN FORMAT=JSON SELECT *FROM FACTURAS WHERE FECHA_VENTA = "20170101";
-- COST 8849.05
EXPLAIN FORMAT=JSON SELECT *FROM FACTURAS WHERE FECHA_VENTA = "20170101" \G;
-- COST CON INDEX ES 25.90

ALTER TABLE FACTURAS ADD INDEX(FECHA_VENTA);