/*
		CURSO SQL CON MYSWQL ------- PROYECTO FINAL
			CREAR UNA VENTA FICTICIA COLOCANDO AL INTERIOR DE UN STORED PROCEDURES LOS SIGUIENBTES PARAMETROS:
				- FECHA
                - NUMERO MAXIMIMO DE ITEMS
                - NUMERO MAXIMO DE CANTIDAD
			
            GENERAR UN CLIENTE DE FORMA ALEATORIA Y UN VENDEDOR DE FORMA ALEATORIA PARA COLOCARLOS DENTRO DE FACTURAS
            GENERAR CODIGO Y CANTIDAD  DE PRODUCTOS ALEATORIOS PARA INTEGRARLOS DENTRO DE ITEMS
*/

CREATE DATABASE empresa;

USE empresa;

CREATE TABLE IF NOT EXISTS clientes(
	DNI VARCHAR(11) NOT NULL,
    NOMBRE VARCHAR(100) NULL,
    DIRECCION VARCHAR(100),
    BARRIO VARCHAR(50),
    CIUDAD VARCHAR(10),
    ESTADO VARCHAR(10),
    CP VARCHAR(10),
    FECHA_NACIMIENTO DATE,
    EDAD SMALLINT,
    SEXO VARCHAR(1),
    LIMITE_CREDITO FLOAT,
    VOLUMEN_COMPRA FLOAT,
    PRIMERA_COMPRA BIT,    
    PRIMARY KEY(DNI)    
);

SELECT * FROM clientes;

CREATE TABLE IF NOT EXISTS`empresa`.`vendedores` (
  `MATRICULA` VARCHAR(5) NOT NULL,
  `NOMBRE` VARCHAR(100) NULL,
  `BARRIO` VARCHAR(50) NULL,
  `COMISION` FLOAT NULL,
  `FEHCA_ADMISION` DATE NULL,
  `VACACIONES` BIT(1) NULL,
  PRIMARY KEY (`MATRICULA`));
  
  SELECT * FROM vendedores;
  
  CREATE TABLE IF NOT EXISTS productos(
	CODIGO VARCHAR(10) NOT NULL,
    DESCRIPCION VARCHAR(100),
    SABOR VARCHAR(50),
    TAMANO VARCHAR(50),
    ENVASE VARCHAR(50),
    PRECIO FLOAT,
    PRIMARY KEY (CODIGO)
  );
  
    SELECT * FROM productos;
    
  CREATE TABLE IF NOT EXISTS factura(
	NUMERO VARCHAR(5) NOT NULL,
    FECHA DATE,
    DNI VARCHAR(11) NOT NULL,
    MATRICULA VARCHAR(5) NOT NULL,
    IMPUESTO FLOAT,
    PRIMARY KEY (NUMERO),
    FOREIGN KEY (DNI) REFERENCES clientes(DNI),
    FOREIGN KEY (MATRICULA) REFERENCES vendedores(MATRICULA)  );

ALTER TABLE factura RENAME TO facturas;
 SELECT * FROM facturas;
 
 DROP TABLE items;
 
  CREATE TABLE IF NOT EXISTS items (
	NUMERO VARCHAR(5) NOT NULL,
    CODIGO VARCHAR(10) NOT NULL,
    CANTIDAD INT,
    PRECIO FLOAT,
    PRIMARY KEY(NUMERO, CODIGO),
    FOREIGN KEY  (NUMERO) REFERENCES facturas(NUMERO),
    FOREIGN KEY (CODIGO) REFERENCES productos(CODIGO)  );
    
 SELECT * FROM items;